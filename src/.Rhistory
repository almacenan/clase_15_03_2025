setwd("~/")
setwd("~/")
load("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/src/dependencies.R")
setwd("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025")
setwd("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/src")
CLEAR
clear
cls
getwd()
list.files()
source()
setwd("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/src")
source(config.R)
source("config.R")
source("dependencies.R")
library(dplyr)
source("dependencies.R")
install.packages("dplyr")
install.packages("ggplot2{¿")
install.packages("ggplot2")
source("dependencies.R")
descop = stl(serie_temporal, s.window = 2)
plot(descop)
#seriserie_indiceserie_temporal <- ts()
serie <- ts(AirPassengers, start =1927, end =1960)
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- felicidad_temporal %>%
tibble()
felicidad_temporal <- read.csv("input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("/input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("/input/raw/world-happiness-report.csv")
felicidad_2021 <- read.csv("/input/raw/world-happiness-report-2021.csv")
felicidad_temporal <- read.csv("/input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("/input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("/input/raw/world-happiness-report.csv")
getwd()
felicidad_temporal <- read.csv("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/input/raw/world-happiness-report.csv")
felicidad_temporal <- read.csv("C:\Users\Asus\Downloads\Maestria\Analisis_datos\Lab_ic_pilot\clase_15_03_2025\input\raw\world-happiness-report.csv")
felicidad_temporal <- read.csv("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/input/raw/world-happiness-report.csv")
felicidad_2021 <- read.csv("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/input/raw/world-happiness-report-2021.csv")
felicidad_temporal <- felicidad_temporal %>%
tibble()
serie_indice <- felicidad_temporal %>%
group_by(year) %>%
summarise(indice=mean(Life.Ladder))
"Life.Ladder"
plot(serie_indice,
serie_indice,
type = "b",
pch = 20,
col ="#4c4747"
)
serie_temporal <- ts(serie_indice$indice, start = c(2005, 2),frequency = 2)
descop = stl(serie_temporal, s.window = 2)
plot(descop)
#seriserie_indiceserie_temporal <- ts()
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
serie_temporal <- ts(serie_indice$indice, start = c(2005, 2),frequency = 2)
descop = stl(serie_temporal, s.window = 2)
plot(descop)
#seriserie_indiceserie_temporal <- ts()
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
serie_temporal <- ts(serie_indice$indice, start = c(2005, 2),frequency = 2)
descop = stl(serie_temporal, s.window = 2)
plot(descop)
#seriserie_indiceserie_temporal <- ts()
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
serie_temporal <- ts(serie_indice$indice, start = c(2005, 2),frequency = 2)
descop = stl(serie_temporal, s.window = 2)
plot(descop)
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
seriserie_indiceserie_temporal <- ts()
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
serie <- ts(AirPassengers, start =1927, end =1960)
ejemplo = stl(serie, s.window = 6)
ggplot(felicidad_2021, aes(x= Ladder.score, y= Logged.GDP.per.capita, color=))
# Calcular los intervalos de confianza por región
intervalos <- datos %>%
group_by(region) %>%
summarize(
media = mean(valor, na.rm = TRUE),
error = qt(0.975, df = n() - 1) * sd(valor, na.rm = TRUE) / sqrt(n())
) %>%
mutate(lower = media - error, upper = media + error)
# Calcular los intervalos de confianza por región
intervalos <- felicidad_temporal %>%
group_by(region) %>%
summarize(
media = mean(Life.Ladder, na.rm = TRUE),
error = qt(0.975, df = n() - 1) * sd(Life.Ladder, na.rm = TRUE) / sqrt(n())
) %>%
mutate(lower = media - error, upper = media + error)
# Calcular los intervalos de confianza por país (o región)
intervalos <- felicidad_temporal %>%
group_by(Country.name) %>%
summarize(
media = mean(Life.Ladder, na.rm = TRUE),
error = qt(0.975, df = n() - 1) * sd(Life.Ladder, na.rm = TRUE) / sqrt(n())
) %>%
mutate(lower = media - error, upper = media + error)
source("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/src/exploratory/temporal_description.R", echo=TRUE)
# Agrupar por año y calcular el índice de felicidad promedio
serie_indice <- felicidad_temporal %>%
group_by(year) %>%
summarise(indice = mean(Life.Ladder, na.rm = TRUE))
# Verificar la tabla resultante
print(serie_indice)
# Crear la serie temporal con frecuencia anual
serie_temporal <- ts(serie_indice$indice, start = min(serie_indice$year), frequency = 1)
# Descomposición estacional usando stl
descop <- stl(serie_temporal, s.window = "periodic")
source("C:/Users/Asus/Downloads/Maestria/Analisis_datos/Lab_ic_pilot/clase_15_03_2025/src/exploratory/temporal_description.R", echo=TRUE)
# Graficar los intervalos de confianza
ggplot(intervalos, aes(x = row_number(), y = Country.name)) +
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "blue") +
geom_point(aes(x = media), color = "red") +
labs(title = "Intervalos de Confianza por País", x = "Índice", y = "País") +
theme_minimal()
# Graficar los intervalos de confianza
ggplot(intervalos, aes(x = row_number(), y = Country.name)) +
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "blue") +
geom_point(aes(x = media), color = "red") +
labs(title = "Intervalos de Confianza por País", x = "Índice", y = "País") +
theme_minimal()
# Graficar los intervalos de confianza
ggplot(intervalos, aes(x = row_number(), y = Country.name)) +
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "blue") +
geom_point(aes(x = media), color = "red") +
labs(title = "Intervalos de Confianza por País", x = "Índice", y = "País") +
theme_minimal()
# Agrupar por año y calcular el índice de felicidad promedio
serie_indice <- felicidad_temporal %>%
group_by(year) %>%
summarise(indice = mean(Life.Ladder, na.rm = TRUE))
# Verificar la tabla resultante
print(serie_indice)
# Crear la serie temporal con frecuencia anual
serie_temporal <- ts(serie_indice$indice, start = min(serie_indice$year), frequency = 1)
# Descomposición estacional usando stl
descop <- stl(serie_temporal, s.window = "periodic")
# Descomposición estacional usando stl
descop <- stl(serie_temporal, s.window = "periodic")
# Verificar la serie temporal
print(serie_temporal)
frequency(serie_temporal)
length(serie_temporal)
# Crear la serie temporal con frecuencia anual
serie_temporal <- ts(serie_indice$indice, start = min(serie_indice$year), frequency = 1)
# Descomposición estacional usando stl
descop <- stl(serie_temporal, s.window = "periodic")
# Verificar la serie temporal
print(serie_temporal)
frequency(serie_temporal)
length(serie_temporal)
# Crear la serie temporal con frecuencia anual
serie_temporal <- ts(serie_indice$indice, start = min(serie_indice$year), frequency = 1)
# Descomposición estacional usando stl
descop <- stl(serie_temporal, s.window = "periodic")
descop <- stl(serie_temporal, s.window = "periodic")
serie_temporal <- ts(serie_indice$indice, start = c(2005, 1), frequency = 12)  # Mensual
# Graficar la descomposición
plot(descop)
# Instalar el paquete si no lo tienes
if (!require(GGally)) install.packages("GGally")
# Generar el pairplot
library(GGally)
# Crear el pairplot con todas las variables disponibles
ggpairs(felicidad_temporal,
title = "Pairplot de las variables disponibles",
aes(color = factor(region)))  # Puedes cambiar "region" según tu dataset
# Generar el pairplot
library(GGally)
# Crear el pairplot con todas las variables disponibles
ggpairs(felicidad_temporal,
title = "Pairplot de las variables disponibles",
aes(color = factor(region)))  # Puedes cambiar "region" según tu dataset
# Crear el pairplot con todas las variables disponibles (sin la columna de países)
ggpairs(felicidad_sin_pais,
title = "Pairplot de las variables disponibles",
aes(color = factor(region)))
ggpairs(felicidad_temporal,
title = "Pairplot de las variables disponibles",
aes(color = factor(region)),
cardinality_threshold = 200)
ggpairs(felicidad_temporal,
title = "Pairplot de las variables disponibles",
aes(color = factor(Region)),
cardinality_threshold = 200)
colnames(felicidad_temporal)
felicidad_sin_pais <- felicidad_temporal %>% select(-Country.name)
# Crear el pairplot sin el color por región
ggpairs(felicidad_sin_pais,
title = "Pairplot de las variables disponibles")
